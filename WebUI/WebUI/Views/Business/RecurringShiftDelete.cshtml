@model WebUI.DTOs.ShiftTemplateDTO

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="text-center">
        <div class="nav-tools pull-right">
        </div>
        <div class="nav-tools pull-left">
        </div>
        <div class="nav-tools">
            <h3>Delete recurring shift</h3>
        </div>
    </div>
</nav>
<div id="page-content" class="container-fluid theme-showcase">
    <div class="row-fluid">
        <div class="col-md-12">
            <h3>Are you sure you want to delete this?</h3>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.EmployeeFullName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.RoleId)
                </dt>
                <dd>
                    @if (!String.IsNullOrEmpty(Model.RoleName))
                    {
                        @Html.DisplayFor(model => model.RoleName)
                    }
                    else
                    {
                        <text>&nbsp;</text>
                    }
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.StartTime)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.StartTime)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.FinishTime)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.FinishTime)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Monday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Monday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Tuesday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Tuesday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Wednesday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Wednesday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Thursday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Thursday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Friday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Friday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Saturday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Saturday)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Sunday)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Sunday)
                </dd>

                @if (ViewBag.HasInternalLocations)
                                    {
                                <dt>
                                    @Html.DisplayNameFor(model => model.InternalLocationId)
                                </dt>
                                <dd>
                                    @if (!String.IsNullOrEmpty(Model.InternalLocationName))
                                    {
                                        @Html.DisplayFor(model => model.InternalLocationName)
                                    }
                                    else
                                    {
                                        <text>&nbsp;</text>
                                    }
                                </dd>
                }
            </dl>
           @using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "body", LoadingElementId = "divLoading", OnFailure = "HandleError" }))
           {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    @Html.HiddenFor(model => model.BusinessLocationId)
                    @Ajax.ActionLink("< Back to list", "RecurringShiftIndex", new { businessLocationId = Model.BusinessLocationId }, new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "GET", UpdateTargetId = "body", LoadingElementId = "divLoading" }, new { @class = "btn  btn-outline btn-primary btn-sm" })
                    <input type="submit" value="Delete" class="btn btn-danger" />

                </div>
            }
        </div>
    </div>
</div>