@model WebUI.DTOs.EmployeeDTO
<nav class="navbar navbar-default navbar-fixed-top">
    <div class="text-center">
        <div class="nav-tools pull-right">
        </div>
        <div class="nav-tools pull-left">
        </div>
        <div class="nav-tools">
            <h3>Delete employee</h3>
        </div>
    </div>
</nav>
<div id="page-content" class="container-fluid theme-showcase">
    <div class="row-fluid">
        <div class="col-md-12">
            <h3>Are you sure you want to delete this employee?</h3>
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                    </>

                <dt>
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.LastName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MobilePhone)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.MobilePhone)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd>
                    @if (!String.IsNullOrEmpty(Model.Email))
                    {
                        @Html.DisplayFor(model => model.Email)
                    }
                    else
                    {
                        <text>&nbsp;</text>
                    }

                </dd>
                @*<dt>
                    @Html.DisplayNameFor(model => model.Type)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Type)
                </dd>*@
            </dl>
            <p>
                <h4><u>Note:</u> Any future shifts assigned to this employee will revert to open shifts!</h4>
            </p>
            @using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "body", LoadingElementId = "divLoading", OnFailure = "HandleError" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.BusinessLocationId)
                <div class="form-actions no-color">
                    @Ajax.ActionLink("< Back to list", "Index", "Employee", new { businessLocationId = Model.BusinessLocationId, businessId = Model.BusinessId }, new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "GET", UpdateTargetId = "body", LoadingElementId = "divLoading" }, new { @class = "btn  btn-outline btn-primary btn-sm" })
                    <input type="submit" value="Delete" class="btn btn-danger btn-sm" />
                </div>
            }
        </div>
    </div>
</div>

